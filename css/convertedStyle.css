:root {
  --color-primary: #eb2f64;
  --color-primary-light: #ff3366;
  --color-primary-dark: #ba265d;
  --color-grey-light-1: #faf9f9;
  --color-grey-light-2: #f4f2f2;
  --color-grey-light-3: #f0eeee;
  --color-grey-light-4: #ccc;
  --color-grey-dark-1: #333;
  --color-grey-dark-2: #777;
  --color-grey-dark-3: #999;
  --shadow-dark: 0 2rem 6rem rgba(0, 0, 0, 0.3);
  --shadow-light: 0 2rem 5rem rgba(0, 0, 0, 0.06);
  --line: 1px solid var(--color-grey-light-2); }

* {
  padding: 0;
  margin: 0; }

*,
*::after,
*::before {
  box-sizing: inherit; }

html {
  box-sizing: border-box;
  font-size: 62.5%; }
  @media only screen and (max-width: 68.75em) {
    html {
      font-size: 50%; } }

body {
  font-family: "Open Sans", sans-serif;
  font-weight: 400;
  line-height: 1.6;
  color: var(--color-grey-dark-2);
  background-image: linear-gradient(to right bottom, var(--color-primary-light), var(--color-primary-dark));
  background-size: cover;
  background-repeat: no-repeat;
  min-height: 100vh; }

.logo {
  height: 3.25rem;
  margin-left: 2rem; }

.search {
  flex: 0 0 40%;
  display: flex;
  align-items: center;
  justify-content: center; }
  @media only screen and (max-width: 31.25em) {
    .search {
      order: 1;
      flex: 0 0 100%;
      background-color: var(--color-grey-light-2); } }
  .search__input {
    width: 90%;
    font-family: inherit;
    font-size: inherit;
    color: inherit;
    background-color: var(--color-grey-light-2);
    border: none;
    outline: none;
    padding: 0.7rem 2rem;
    border-radius: 10rem;
    transition: all 0.4s;
    margin-right: -3.5rem; }
    .search__input:focus {
      width: 100%;
      background-color: var(--color-grey-light-3); }
    .search__input::-webkit-input-placeholder {
      font-weight: 100;
      color: var(--color-grey-light-4); }
  .search__input:focus + .search__button {
    background-color: var(--color-grey-light-3); }
  .search__button {
    border: none;
    background-color: var(--color-grey-light-2);
    outline: none; }
  .search__icon {
    height: 2.25rem;
    width: 2.25rem;
    fill: var(--color-grey-dark-3); }

.user-nav {
  align-self: stretch;
  display: flex;
  align-items: center; }
  .user-nav > * {
    padding: 0 2rem;
    cursor: pointer;
    height: 100%;
    display: flex;
    align-items: center; }
  .user-nav > *:hover {
    background-color: var(--color-grey-light-2); }
  .user-nav__icon-box {
    position: relative; }
  .user-nav__icon {
    height: 2.25rem;
    width: 2.25rem;
    fill: var(--color-grey-dark-2); }
  .user-nav__notification {
    font-size: 0.8rem;
    height: 1.75rem;
    width: 1.75rem;
    border-radius: 50%;
    background-color: var(--color-primary);
    color: #fff;
    position: absolute;
    top: 1.5rem;
    right: 1.1rem;
    display: flex;
    justify-content: center;
    align-items: center; }
  .user-nav__user-photo {
    height: 3.75rem;
    border-radius: 50%;
    margin-right: 1rem; }

.side-nav {
  font-size: 1.4rem;
  margin-top: 3.5rem;
  list-style: none;
  position: relative; }
  @media only screen and (max-width: 56.25em) {
    .side-nav {
      display: flex;
      margin: 0; } }
  .side-nav__item {
    position: relative; }
    .side-nav__item:not(:last-child) {
      margin-bottom: 0.5rem; }
      @media only screen and (max-width: 56.25em) {
        .side-nav__item:not(:last-child) {
          margin: 0; } }
      @media only screen and (max-width: 56.25em) {
        .side-nav__item:not(:last-child) {
          flex: 1; } }
    .side-nav__item::before {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      height: 100%;
      width: 0.3rem;
      background-color: var(--color-primary);
      transform: scaleY(0);
      transition: transform 0.2s, width 0.3s cubic-bezier(1, 0, 0, 1) 0.1s, background-color 0.2s; }
    .side-nav__item:active::before {
      background-color: var(--color-primary-light); }
    .side-nav__item:hover::before, .side-nav__item--active::before {
      transform: scaleY(1);
      width: 100%; }
  .side-nav__link:link, .side-nav__link:visited {
    color: var(--color-grey-light-1);
    text-decoration: none;
    text-transform: uppercase;
    display: block;
    padding: 1.5rem 3rem;
    display: flex;
    align-items: center;
    position: relative;
    z-index: 10; }
    @media only screen and (max-width: 56.25em) {
      .side-nav__link:link, .side-nav__link:visited {
        justify-content: center;
        padding: 2rem; } }
    @media only screen and (max-width: 37.5em) {
      .side-nav__link:link, .side-nav__link:visited {
        flex-direction: column;
        padding: 1.5rem 0.5rem; } }
  .side-nav__icon {
    width: 1.75rem;
    height: 1.75rem;
    margin-right: 2rem;
    fill: currentColor; }
    @media only screen and (max-width: 37.5em) {
      .side-nav__icon {
        margin-right: 0;
        margin-bottom: 0.7rem;
        width: 1.5rem;
        height: 1.5rem; } }

.legal {
  font-size: 1.2rem;
  color: var(--color-grey-light-4);
  text-align-last: center;
  padding: 2.5rem; }
  @media only screen and (max-width: 56.25em) {
    .legal {
      display: none; } }

.gallery {
  display: flex; }
  .gallery__photo {
    width: 100%;
    display: block; }

.overview {
  display: flex;
  justify-content: space-between;
  align-items: center;
  border-bottom: 0.1rem solid var(--color-grey-light-3); }
  .overview__heading {
    font-size: 2.5rem;
    font-weight: 300;
    text-transform: uppercase;
    letter-spacing: 0.1rem;
    padding: 1.5rem 3rem; }
    @media only screen and (max-width: 37.5em) {
      .overview__heading {
        font-size: 1.8rem;
        padding: 1.25rem 2rem; } }
  .overview__stars {
    margin-right: auto;
    display: flex; }
  .overview__icon-star, .overview__icon-location {
    width: 1.75rem;
    height: 1.75rem;
    fill: var(--color-primary); }
  .overview__icon-location {
    margin-right: 0.5rem; }
  .overview__location {
    font-size: 1.2rem;
    display: flex;
    align-items: center; }
  .overview__rating {
    background-color: var(--color-primary);
    color: #fff;
    margin-left: 3rem;
    align-self: stretch;
    padding: 0 2.25rem;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center; }
    @media only screen and (max-width: 37.5em) {
      .overview__rating {
        padding: 0 1.5rem; } }
  .overview__rating-average {
    font-size: 2.25rem;
    font-weight: 300;
    margin-bottom: -0.3rem; }
    @media only screen and (max-width: 37.5em) {
      .overview__rating-average {
        font-size: 1.8rem; } }
  .overview__rating-count {
    font-size: 0.8rem;
    text-transform: uppercase; }
    @media only screen and (max-width: 37.5em) {
      .overview__rating-count {
        font-size: 0.5rem; } }

.btn-inline {
  border: none;
  color: var(--color-primary);
  font-size: inherit;
  border-bottom: 0.1rem solid currentColor;
  padding-bottom: 0.2rem;
  display: inline-block;
  background-color: transparent;
  cursor: pointer;
  transition: all 0.2s; }
  .btn-inline span {
    transition: all 0.2s;
    margin-left: 3px;
    font-weight: bold; }
  .btn-inline:hover {
    color: var(--color-grey-dark-1); }
    .btn-inline:hover span {
      margin-left: 8px; }
  .btn-inline:focus {
    outline: none;
    animation: pulsate 1s infinite; }

@keyframes pulsate {
  0% {
    transform: scale(1);
    box-shadow: none; }
  50% {
    transform: scale(1.05);
    box-shadow: 0 1rem 4rem rgba(0, 0, 0, 0.25); }
  100% {
    transform: scale(1);
    box-shadow: none; } }

.paragraph:not(:last-child) {
  margin-bottom: 2rem; }

.list {
  list-style: none;
  margin: 3rem 0;
  padding: 3rem 0;
  border-top: var(--line);
  border-bottom: var(--line);
  display: flex;
  flex-wrap: wrap; }
  .list__item {
    flex: 0 0 50%;
    margin-bottom: 0.7rem; }
    .list__item::before {
      content: "";
      display: inline-block;
      width: 1.2rem;
      height: 1.2rem;
      margin-right: 0.7rem;
      background-image: url(/img/SVG/chevron-thin-right.svg);
      background-size: cover; }
      @supports (-webkit-mask-image: url()) or (mask-image: url()) {
        .list__item::before {
          -webkit-mask-image: url(/img/SVG/chevron-thin-right.svg);
          -webkit-mask-size: cover;
          background-color: var(--color-primary);
          mask-image: url(/img/SVG/chevron-thin-right.svg);
          mask-size: cover;
          background-image: none; } }

.recommend {
  font-size: 1.3rem;
  color: var(--color-grey-dark-3);
  display: flex;
  align-items: center;
  justify-content: space-between; }
  .recommend__count {
    margin-right: auto; }
  .recommend__friends {
    display: flex; }
  .recommend__photo {
    box-sizing: content-box;
    height: 4rem;
    width: 4rem;
    border-radius: 50%;
    border: 3px solid #fff; }
    .recommend__photo:not(:last-child) {
      margin-right: -1.5rem; }

.review {
  position: relative;
  background-color: #fff;
  box-shadow: var(--shadow-light);
  padding: 3rem;
  margin-bottom: 3.5rem;
  overflow: hidden; }
  @media only screen and (max-width: 56.25em) {
    .review {
      padding: 2rem;
      margin-bottom: 3rem; } }
  .review__text {
    margin-bottom: 2rem;
    position: relative;
    z-index: 10; }
  .review__user {
    display: flex;
    align-items: center; }
  .review__photo {
    height: 4.5rem;
    width: 4.5rem;
    border-radius: 50%;
    margin-right: 1.5rem; }
  .review__user-box {
    margin-right: auto; }
  .review__user-name {
    font-size: 1.1rem;
    font-weight: 600;
    text-transform: uppercase;
    margin-bottom: 0.4rem; }
  .review__user-date {
    font-size: 1rem;
    color: var(--color-grey-dark-3); }
  .review__rating {
    color: var(--color-primary);
    font-size: 2.2rem;
    font-weight: 400; }
  .review::before {
    content: "\201c";
    position: absolute;
    top: -2.75rem;
    left: -0.7rem;
    font-size: 20rem;
    color: var(--color-grey-light-2);
    font-family: sans-serif;
    line-height: 1;
    z-index: 1; }

.cta {
  padding: 3.5rem 0;
  text-align: center; }
  @media only screen and (max-width: 56.25em) {
    .cta {
      padding: 2.5rem 0; } }
  .cta__book-now {
    font-size: 2rem;
    font-weight: 400;
    text-transform: uppercase;
    margin-bottom: 2.5rem; }

.btn {
  font-size: 1.5rem;
  font-weight: 400;
  text-transform: uppercase;
  border-radius: 100px;
  border: none;
  outline: none;
  background-image: linear-gradient(to right, var(--color-primary), var(--color-primary-dark));
  color: #fff;
  position: relative;
  overflow: hidden;
  cursor: pointer; }
  .btn > * {
    display: inline-block;
    height: 100%;
    width: 100%;
    transition: all 0.3s; }
  .btn__visible {
    padding: 2rem 7.5rem; }
  .btn__invisible {
    position: absolute;
    top: -100%;
    left: 0;
    padding: 2rem 0; }
  .btn:hover {
    background-image: linear-gradient(to left, var(--color-primary), var(--color-primary-dark)); }
    .btn:hover .btn__visible {
      transform: translateY(-100%); }
    .btn:hover .btn__invisible {
      top: 0; }
  .btn:focus {
    animation: pulsate 0.8s infinite; }

.container {
  max-width: 120rem;
  min-height: 50rem;
  margin: 8rem auto;
  background-color: var(--color-grey-light-2);
  box-shadow: var(--shadow-dark); }
  @media only screen and (max-width: 75em) {
    .container {
      margin: 0;
      max-width: 100%;
      width: 100%; } }

.header {
  /* this rem take it's value from font-size in html font-size,
     so child of header will take it's rem from header font-size value */
  font-size: 1.4rem;
  height: 7rem;
  background-color: #fff;
  border-bottom: var(--line);
  display: flex;
  justify-content: space-between;
  align-items: center; }
  @media only screen and (max-width: 31.25em) {
    .header {
      flex-wrap: wrap;
      align-content: space-around;
      height: 11rem; } }

.content {
  display: flex; }
  @media only screen and (max-width: 56.25em) {
    .content {
      flex-direction: column; } }

.sidebar {
  background-color: var(--color-grey-dark-1);
  flex: 0 0 18%;
  display: flex;
  justify-content: space-between;
  flex-direction: column; }

.hotel-view {
  flex: 1;
  background-color: #fff; }

.details {
  font-size: 1.4rem;
  display: flex;
  padding: 4.5rem;
  background-color: var(--color-grey-light-1);
  border-bottom: var(--line); }
  @media only screen and (max-width: 56.25em) {
    .details {
      padding: 3rem; } }
  @media only screen and (max-width: 37.5em) {
    .details {
      flex-direction: column; } }

.description {
  background-color: #fff;
  flex: 0 0 60%;
  margin-right: 4.5rem;
  padding: 3rem;
  box-shadow: var(--shadow-light); }
  @media only screen and (max-width: 56.25em) {
    .description {
      padding: 2rem;
      margin-right: 3rem; } }
  @media only screen and (max-width: 37.5em) {
    .description {
      margin-right: 0;
      margin-bottom: 3rem; } }

.user-reviews {
  display: flex;
  flex-direction: column;
  align-items: center;
  flex: 1; }

/*

  [ Flex Box ]

    Flexbox convert the container to 2 axis (x,y)

      { Container Properties }
        - display flex --> display container as flexbox.

        - justify-content
            * it deal with X-axis
            * center --> put all element in the center of X-axis
            * flex-start --> put all element at the beginning of X-axis
            * flex-end --> put all element at the end of X-axis
            * space-between --> put equal spaces between elements
            * space-around --> put equal spaces around each element
            * evenly --> make spaces around and between element equal

        - align-items
            * center --> put all element in the center of Y-axis
            * flex-start --> put all element at the beginning of Y-axis
            * flex-end --> put all element at the end of Y-axis
            * stretch --> fit height of the elements to cover the height of the container
            * base-line --> make bottom of the text of all element at the same line
        
         align-content
            * it deal with all items of container as one item, it work with Y-axis

        - flex-direction 
            * row --> is the default value, start the row from left to right
            * row-reverse --> start the row from right to left 
            * column --> X will be Y , and Y will be X and all properties work as it with it's axis 

        - flex-wrap
            * wrap --> put all container's element in a single row,
                        even if the width of elements is more than the width of the container 
            * np-wrap --> if the width of elements is more than the width of the container
                          so, break the element that exist from container and put it in other row
                          
      { items Properties }
        - align-self
            * it override this item and work with it alone, 
            * it take all values of align-items but for this item.
            * it work with Y-axis
        
        - order
            * order of the flex-box start from small order to highest order 
            * so, negative order will be the first then positive order

        - flex-grow
            * it define how much this element will take from the container 
            * flex-grow: 2, so this width of this element will be double with of the other element
            * flex-grow: 3,4,5...etc, default is 1  

        - flex-basis
            * we use this to to define width (in pixel or %), if there is much space
            * if there is no enough space, so it will decrease to be as same as width of other element

        - flex-shrink
            * it work with (flex-basis),
            * if 1, it tell browser if the element has flex basis with,
              so shrink it if there is no enough space, if there is much space , so keep as it
            * if 0, it tell browser if the element has flex basis with,
              so keep as it even if there is no enough space.
        
*/
